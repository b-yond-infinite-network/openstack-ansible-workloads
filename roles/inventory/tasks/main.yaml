---
# Playbook to manage OpenStack inventory

- name: gathering OpenStack instance facts
  connection:                     local
  os_server_facts:
    cloud:                        "{{ os_cloud_name }}"
    server:                       "{{ os_instancename_prefix }}*"
  register:                       gathered_os_instance_list

- name: gather networks (LAN and WAN) information
  no_log:                         true
  connection:                     local
  os_networks_facts:
    cloud:                        "{{ os_cloud_name }}"

- name: store public network (WAN) information
  no_log:                         true
  connection:                     local
  with_items:                     "{{ openstack_networks }}"
  when:                           "'Ext-Net' in item.name"
  set_fact:
    os_cloud_publicnetwork:       "{{ item }}"

- name: store public network (WAN) name
  when:                           os_cloud_publicnetwork is defined
  set_fact:
    os_cloud_publicnetwork_name:  "{{ os_cloud_publicnetwork.name }}"

- name: store public network (WAN) ID
  when:                           os_cloud_publicnetwork is defined
  set_fact:
    os_cloud_publicnetwork_id:   "{{ os_cloud_publicnetwork.id }}"

- name: store public subnet (WAN) ID
  when:                           os_cloud_publicnetwork is defined
  set_fact:
    os_cloud_publicsubnet_id:     "{{ os_cloud_publicnetwork.subnets[ 0 ] }}"

- name: gather facts about the public network (WAN) subnets
  connection:                     local
  when:                           os_cloud_publicsubnet_id is defined
  os_subnets_facts:
    cloud:                        "{{ os_cloud_name }}"
    filters:
      id:                         "{{ os_cloud_publicsubnet_id }}"

- name: store public subnet (WAN) cidr as fact
  when:                           openstack_subnets is defined
  set_fact:
    os_cloud_publicsubnet_cidr:   "{{ openstack_subnets[ 0 ].cidr }}"

- name: store private subnet (WAN) gateway IP as fact
  when:                           openstack_subnets is defined
  set_fact:
    os_cloud_publicsubnet_gateway: "{{ openstack_subnets[ 0 ].gateway_ip }}"

- name: store private network (LAN) information
  no_log:                         true
  connection:                     local
  with_items:                     "{{ openstack_networks }}"
  when:                           "'Ext-Net' not in item.name"
  set_fact:
    os_cloud_privatenetwork:      "{{ item }}"

- name: store private network (LAN) name
  when:                           os_cloud_privatenetwork is defined
  set_fact:
    os_cloud_privatenetwork_name:  "{{ os_cloud_privatenetwork.name }}"

- name: store private network (LAN) ID
  when:                           os_cloud_privatenetwork is defined
  set_fact:
    os_cloud_privatenetwork_id:   "{{ os_cloud_privatenetwork.id }}"

- name: store private subnet (LAN) ID
  when:                           os_cloud_privatenetwork is defined
  set_fact:
    os_cloud_privatesubnet_id:    "{{ os_cloud_privatenetwork.subnets[ 0 ] }}"

- name: gather facts about the private network (LAN) subnets
  connection:                     local
  when:                           os_cloud_privatesubnet_id is defined
  os_subnets_facts:
    cloud:                        "{{ os_cloud_name }}"
    filters:
      id:                         "{{ os_cloud_privatesubnet_id }}"

- name: store private subnet (LAN) cidr as fact
  when:                          os_cloud_privatenetwork is defined and openstack_subnets is defined
  set_fact:
    os_cloud_privatesubnet_cidr:  "{{ openstack_subnets[ 0 ].cidr }}"

- name: store private subnet (LAN) gateway IP as fact
  when:                           os_cloud_privatenetwork is defined and openstack_subnets is defined
  set_fact:
    os_cloud_privatesubnet_gateway: "{{ openstack_subnets[ 0 ].gateway_ip }}"

- name: adding existing OpenStack instance to its groups
  no_log:                         true
  add_host:
    name:                         "{{ item.id }}"
    groups:                       "{{ item.metadata.groups }}"
    instance_name:                "{{ item.name }}"
    os_uuid:                      "{{ item.id }}"
    os_key_name:                  "{{ item.metadata.key_name }}"
    os_instance_tags:             "{{ item.metadata.tags }}"
    ansible_ssh_host:             "{{ ( item.networks[ os_cloud_publicnetwork_name ] | default( [] ) )[ 0 ] | default( ( item.networks[ os_cloud_privatenetwork_name | default( '' ) ] | default( [] ) )[ 0 ] ) | default( '' ) }}"
    openstack:
      interface_ip:               "{{ ( item.networks[ os_cloud_publicnetwork_name ] | default( [] ) )[ 0 ] | default( ( item.networks[ os_cloud_privatenetwork_name  | default( '' ) ] | default( [] ) )[ 0 ] ) | default( '' ) }}"
      accessIPv4:                 "{{ ( item.networks[ os_cloud_publicnetwork_name ] | default( [] ) )[ 0 ] | default( ( item.networks[ os_cloud_privatenetwork_name  | default( '' ) ] | default( [] ) )[ 0 ] ) | default( '' ) }}"
    public_v4:                    "{{ ( item.networks[ os_cloud_publicnetwork_name ] | default( [] ) )[ 0 ] | default( '' ) }}"
    private_v4:                   "{{ ( item.networks[ os_cloud_privatenetwork_name  | default( '' ) ] | default( [] ) )[ 0 ] | default( '' ) }}"
    publicIPv4:                   "{{ ( item.networks[ os_cloud_publicnetwork_name ] | default( [] ) )[ 0 ] | default( '' ) }}"
    privateIPv4:                  "{{ ( item.networks[ os_cloud_privatenetwork_name  | default( '' ) ] | default( [] ) )[ 0 ] | default( '' ) }}"
    os_cloud_publicnetwork_name:  "{{ os_cloud_publicnetwork_name | default( '' ) }}"
    os_cloud_publicnetwork_id:    "{{ os_cloud_publicnetwork_id | default( '' ) }}"
    os_cloud_publicsubnet_id:     "{{ os_cloud_publicsubnet_id | default( '' ) }}"
    os_cloud_publicsubnet_cidr:   "{{ os_cloud_publicsubnet_cidr | default( '' ) }}"
    os_cloud_privatenetwork_name: "{{ os_cloud_privatenetwork_name | default( '' ) }}"
    os_cloud_privatenetwork_id:   "{{ os_cloud_privatenetwork_id | default( '' ) }}"
    os_cloud_privatesubnet_id:    "{{ os_cloud_privatesubnet_id | default( '' ) }}"
    os_cloud_privatesubnet_cidr:  "{{ os_cloud_privatesubnet_cidr | default( '' ) }}"
    os_instancename_prefix:       ''
  with_items:                     "{{ gathered_os_instance_list.ansible_facts.openstack_servers }}"
